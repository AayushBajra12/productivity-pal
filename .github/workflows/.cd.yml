name: CD â€” Build, Scan & Deploy

on:
  push:
    branches:
      - "**"         # all branches trigger build & scan
    tags:
      - "v*.*.*"
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  id-token: write
  security-events: write

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}/app

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.meta.outputs.tags }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha
      - uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  trivy-image:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - uses: aquasecurity/trivy-action@0.24.0
        with:
          scan-type: image
          image-ref: ${{ needs.build-and-push.outputs.image }}
          format: sarif
          output: trivy-image.sarif
          ignore-unfixed: true
          severity: CRITICAL,HIGH
      - uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-image.sarif

  deploy:
    needs: [ build-and-push, trivy-image ]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4
      - name: Set KUBECONFIG
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG_BASE64 }}" | base64 -d > $HOME/.kube/config
      - name: Update image tag in manifests
        run: sed -i "s#image: .*#image: ${{ needs.build-and-push.outputs.image }}#" k8s/deployment.yaml
      - uses: azure/k8s-deploy@v5
        with:
          manifests: |
            k8s/namespace.yaml
            k8s/deployment.yaml
            k8s/service.yaml
